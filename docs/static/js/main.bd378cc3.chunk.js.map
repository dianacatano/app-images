{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OAAS,uBACAC,SAXY,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKb,UAEL,uBACMO,KAAO,OACbC,MAAUT,EACVU,SAnBsB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,UAalB,Q,+BCrBAG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OAAS,sBACDc,UAAY,yCADX,UAEL,qBACIC,IAAQf,EACZgB,IAAQN,IAJH,IAKF,kCACGA,EADH,OALE,QCAAO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAuBtC,OAhBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GAEFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAKGqB,EDrB+BK,CAAa1B,GAAjCa,EAFmB,EAEzBN,KAAca,EAFW,EAEXA,QAEtB,OAAS,qCAEL,qBACGJ,UAAY,oCADf,cACuDhB,EADvD,OAIIoB,GAAW,mBAAIJ,UAAY,mCAAhB,uBAEX,qBACIA,UAAY,YADhB,SAIQH,EAAOJ,KAAI,SAAAC,GAAG,OAAM,cAChB,EADgB,eACiBA,GAAbA,EAAIC,SAbnC,QEJJgB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,eAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OAAS,qCAEL,gDAFK,IAGoB,cACzB,EADyB,CACbA,cAAkBA,IAJzB,IAKF,uBAGH,mCAEI2C,EAAWnB,KAAI,SAAAT,GAAQ,OAAM,cACzB,EADyB,CAEzBA,SAAaA,GADGA,MAHxB,W,MCXR6B,IAASC,OAAQ,cACb,EADa,IAEbC,SAASC,eAAe,W","file":"static/js/main.bd378cc3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // ''\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [inputValue, ...cats, ]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return ( <\r\n        form onSubmit = { handleSubmit } >\r\n        <\r\n        input type = \"text\"\r\n        value = { inputValue }\r\n        onChange = { handleInputChange }\r\n        /> < /\r\n        form >\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=A8xMXqzieIHmtO3BjGLAtf1daSSDAv8K`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n\r\n    return ( <\r\n        div className = \"card animate__animated animate__fadeIn\" >\r\n        <\r\n        img src = { url }\r\n        alt = { title }\r\n        /> <\r\n        p > { title } < /p> < /\r\n        div >\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n        const { data: images, loading } = useFetchGifs(category);\r\n\r\n        return ( <\r\n            >\r\n            <\r\n            h3 className = \"animate__animated animate__fadeIn\" > { category } < /h3>\r\n\r\n            {\r\n                loading && < p className = \"animate__animated animate__flash\" > Loading < /p> }\r\n\r\n                <\r\n                div className = \"card-grid\" >\r\n\r\n                    {\r\n                        images.map(img => ( <\r\n                            GifGridItem key = { img.id } {...img }\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n                <\r\n                /div> < /\r\n                >\r\n            )\r\n        }","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n\r\n\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n\r\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['Cheesecake']);\n\n    return ( <\n        >\n        <\n        h2 > GifExpertApp < /h2> <\n        AddCategory setCategories = { setCategories }\n        /> <\n        hr / >\n\n        <\n        ol > {\n            categories.map(category => ( <\n                GifGrid key = { category }\n                category = { category }\n                />\n            ))\n        } <\n        /ol>\n\n        <\n        />\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render( <\n    GifExpertApp / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}